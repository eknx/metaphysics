"""
Autogenerated input type of AddAssetToConsignmentSubmission
"""
input AddAssetToConsignmentSubmissionInput {
  assetType: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  geminiToken: String!
  submissionID: ID!
}

"""
Autogenerated return type of AddAssetToConsignmentSubmission
"""
type AddAssetToConsignmentSubmissionPayload {
  asset: Asset

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Submission Asset
"""
type Asset {
  """
  type of this Asset
  """
  assetType: String!

  """
  gemini token for asset
  """
  geminiToken: String

  """
  Uniq ID for this asset
  """
  id: ID!

  """
  known image urls
  """
  imageUrls: JSON
  submissionID: ID
  submissionId: ID!
}

enum Category {
  ARCHITECTURE
  DESIGN_DECORATIVE_ART
  DRAWING_COLLAGE_OR_OTHER_WORK_ON_PAPER
  FASHION_DESIGN_AND_WEARABLE_ART
  INSTALLATION
  JEWELRY
  MIXED_MEDIA
  OTHER
  PAINTING
  PERFORMANCE_ART
  PHOTOGRAPHY
  PRINT
  SCULPTURE
  TEXTILE_ARTS
  VIDEO_FILM_ANIMATION
}

"""
Autogenerated input type of CreateOfferMutation
"""
input CreateOfferMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  commissionPercentWhole: Int!
  createdById: String
  currency: String
  deadlineToConsign: String
  gravityPartnerId: String!
  highEstimateDollars: Int
  insuranceInfo: String
  lowEstimateDollars: Int
  notes: String
  offerType: String
  otherFeesInfo: String
  partnerInfo: String
  photographyInfo: String
  saleDate: Date
  saleLocation: String
  saleName: String
  shippingInfo: String
  state: String
  submissionId: ID!
}

"""
Autogenerated return type of CreateOfferMutation
"""
type CreateOfferMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  consignmentOffer: Offer
}

"""
Autogenerated input type of CreateSubmissionMutation
"""
input CreateSubmissionMutationInput {
  additionalInfo: String
  artistID: String!
  authenticityCertificate: Boolean
  category: Category

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  currency: String
  depth: String
  dimensionsMetric: String
  edition: Boolean
  editionNumber: String
  editionSize: Int
  height: String
  locationCity: String
  locationCountry: String
  locationState: String
  medium: String
  minimumPriceDollars: Int
  provenance: String
  signature: Boolean
  state: State
  title: String
  width: String
  year: String
}

"""
Autogenerated return type of CreateSubmissionMutation
"""
type CreateSubmissionMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  consignmentSubmission: Submission
}

"""
Date in YYYY-MM-DD format
"""
scalar Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Represents untyped JSON
"""
scalar JSON

"""
Mutation root for this schema
"""
type Mutation {
  addAssetToConsignmentSubmission(
    input: AddAssetToConsignmentSubmissionInput!
  ): AddAssetToConsignmentSubmissionPayload
  createConsignmentOffer(
    input: CreateOfferMutationInput!
  ): CreateOfferMutationPayload
  createConsignmentSubmission(
    input: CreateSubmissionMutationInput!
  ): CreateSubmissionMutationPayload
  updateConsignmentSubmission(
    input: UpdateSubmissionMutationInput!
  ): UpdateSubmissionMutationPayload
}

"""
Consignment Offer
"""
type Offer {
  commissionPercentWhole: Int
  createdById: ID
  currency: String
  deadlineToConsign: String
  highEstimateCents: Int

  """
  Uniq ID for this submission
  """
  id: ID!
  insuranceInfo: String
  lowEstimateCents: Int
  notes: String
  offerType: String
  otherFeesInfo: String
  partnerInfo: String
  photographyInfo: String
  saleDate: String
  saleLocation: String
  saleName: String
  shippingInfo: String
  state: String
}

type PageCursor {
  """
  first cursor on the page
  """
  cursor: String!

  """
  is this the current page?
  """
  isCurrent: Boolean!

  """
  page number out of totalPages
  """
  page: Int!
}

type PageCursors {
  around: [PageCursor!]!

  """
  optional, may be included in field around
  """
  first: PageCursor

  """
  optional, may be included in field around
  """
  last: PageCursor
  previous: PageCursor
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  Get a Submission
  """
  submission(id: ID): Submission

  """
  Filter all submission
  """
  submissions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    If true return only available submissions
    """
    available: Boolean

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Get all submissions with these IDs
    """
    ids: [ID!]

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Get all submissions with these user IDs
    """
    userId: [ID!]
  ): SubmissionConnection
}

enum State {
  APPROVED
  DRAFT
  REJECTED
  SUBMITTED
}

"""
Consignment Submission
"""
type Submission {
  additionalInfo: String
  artistId: String!
  assets: [Asset]
  authenticityCertificate: Boolean
  category: String
  createdAt: ISO8601DateTime
  currency: String
  depth: String
  dimensionsMetric: String
  edition: String
  editionNumber: String
  editionSize: Int
  height: String

  """
  Uniq ID for this submission
  """
  id: ID!
  internalID: ID
  locationCity: String
  locationCountry: String
  locationState: String
  medium: String
  minimumPriceDollars: Int
  offers(gravityPartnerId: ID!): [Offer!]!
  primaryImage: Asset
  provenance: String
  signature: Boolean
  state: State
  title: String
  userId: String!
  width: String
  year: String
}

"""
The connection type for Submission.
"""
type SubmissionConnection {
  """
  A list of edges.
  """
  edges: [SubmissionEdge]

  """
  A list of nodes.
  """
  nodes: [Submission]
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int
  totalPages: Int
}

"""
An edge in a connection.
"""
type SubmissionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Submission
}

"""
Autogenerated input type of UpdateSubmissionMutation
"""
input UpdateSubmissionMutationInput {
  additionalInfo: String
  artistID: String
  authenticityCertificate: Boolean
  category: Category

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  currency: String
  depth: String
  dimensionsMetric: String
  edition: Boolean
  editionNumber: String
  editionSize: Int
  height: String
  id: ID!
  locationCity: String
  locationCountry: String
  locationState: String
  medium: String
  minimumPriceDollars: Int
  provenance: String
  signature: Boolean
  state: State
  title: String
  width: String
  year: String
}

"""
Autogenerated return type of UpdateSubmissionMutation
"""
type UpdateSubmissionMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  consignmentSubmission: Submission
}
